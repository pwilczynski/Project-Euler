#!/usr/bin/python
# Copyright 2010 P. Wilczynski
# Project Euler
# Problem Number 14

import sys
import re

"""
The sequence of triangle numbers is generated by adding the natural numbers.
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. 
The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred 
divisors?
"""

def isprime(startnumber):
    startnumber*=1.0
    for divisor in range(2,int(startnumber**0.5)+1):
        if startnumber/divisor==int(startnumber/divisor):
            return False
    return True

def gen_prime(n):
    primes=[]
    i = 1
    while len(primes)<n:
        i+=1
        if isprime(i):
            primes.append(i)
        else:
            continue
    print primes
    return primes

def num_div(n,primes):
    divisors=''
    count = 0
        
    for i in range(1, n+1):
        if i in primes and n%i != 0:
            return 0
        if n%i == 0:
            count+=1
            divisors+= str(i)+', '
    print divisors[0:-2]
    return count

def basic_div(n):
    count = 0
    for i in range(1,n+1):
        if n%i==0:
            count+=1
            try:
                divisors+= str(i)+', '
            except:
                divisors = ''
                divisors += str(i) + ', '
    print divisors[0:-2]
    return count

def produce_tri(n):
    tri = (n*n+n)/2
    return tri

def triangle_nums(input_max):
    print "*****Triangle Numbers*****"
    winner = 0
    i = 2

    while winner<input_max:
        tri = produce_tri(i)
        print tri, '\t', winner
        k = basic_div(i)
        winner = max(k, winner)
        if winner==k:
            print tri,'\t',winner
        i+=1
    return                                                                               

    primes=getprime[4]

    while winner<input_max:
        tri = produce_tri(i)
        print tri, '\t', winner
        k = num_div(i,primes)
        winner = max(k, winner)
        if winner==k:
            print tri,'\t',winner
        #print winner
        i=2*i


def main():
    number = long(sys.argv[1])
    triangle_nums(number)


if __name__ == '__main__':
    main()
